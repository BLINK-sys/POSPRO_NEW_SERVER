from flask import Blueprint, request, jsonify
from extensions import db
from models.system_brand import SystemBrand
from models.brand import Brand  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞ —Å –±—Ä–µ–Ω–¥–∞–º–∏

system_brands_bp = Blueprint('system_brands', __name__)


# üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤
@system_brands_bp.route('/system-brands', methods=['GET'])
def get_system_brands():
    items = SystemBrand.query.order_by(SystemBrand.order).all()
    brand_map = {b.id: b for b in Brand.query.all()}
    result = []

    for item in items:
        brand = brand_map.get(item.brand_id)
        if brand:
            result.append({
                'id': item.id,
                'brand_id': brand.id,
                'name': brand.name,
                'image_url': brand.image_url,
                'order': item.order
            })
    return jsonify(result)


# üîπ –î–æ–±–∞–≤–∏—Ç—å –±—Ä–µ–Ω–¥ –≤ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ
@system_brands_bp.route('/system-brands', methods=['POST'])
def add_system_brand():
    data = request.json
    brand_id = data.get('brand_id')
    if not brand_id:
        return jsonify({'error': 'brand_id –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}), 400

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª—å
    exists = SystemBrand.query.filter_by(brand_id=brand_id).first()
    if exists:
        return jsonify({'error': '–ë—Ä–µ–Ω–¥ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω'}), 400

    max_order = db.session.query(db.func.max(SystemBrand.order)).scalar() or 0
    new_item = SystemBrand(brand_id=brand_id, order=max_order + 1)
    db.session.add(new_item)
    db.session.commit()

    return jsonify({'message': '–ë—Ä–µ–Ω–¥ –¥–æ–±–∞–≤–ª–µ–Ω', 'id': new_item.id}), 201


# üîπ –£–¥–∞–ª–∏—Ç—å –∏–∑ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö
@system_brands_bp.route('/system-brands/<int:item_id>', methods=['DELETE'])
def delete_system_brand(item_id):
    item = SystemBrand.query.get_or_404(item_id)
    db.session.delete(item)
    db.session.commit()
    return jsonify({'message': '–ë—Ä–µ–Ω–¥ —É–¥–∞–ª—ë–Ω –∏–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è'})


# üîπ –û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫
@system_brands_bp.route('/system-brands/reorder', methods=['POST'])
def reorder_system_brands():
    data = request.get_json()
    if not isinstance(data, list):
        return jsonify({'error': '–û–∂–∏–¥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å id –∏ order'}), 400

    for item in data:
        record = SystemBrand.query.get(item.get('id'))
        if record and 'order' in item:
            record.order = item['order']
    db.session.commit()
    return jsonify({'message': '–ü–æ—Ä—è–¥–æ–∫ –æ–±–Ω–æ–≤–ª—ë–Ω'})


# üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±—Ä–µ–Ω–¥—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–¥–ª—è –≤—ã–±–æ—Ä–∞)
@system_brands_bp.route('/system-brands/all', methods=['GET'])
def get_all_brands():
    brands = Brand.query.order_by(Brand.name).all()
    return jsonify([{
        'id': b.id,
        'name': b.name,
        'image_url': b.image_url,
        'country': b.country,
        'description': b.description
    } for b in brands])
