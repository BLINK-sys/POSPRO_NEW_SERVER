from flask import Flask, send_from_directory
from flask_cors import CORS
from config import Config
from extensions import db, jwt
from routes.auth import auth_bp
from routes.banners import banners_bp
from routes.benefits import benefits_bp
from routes.categories import categories_bp
from routes.clients_routes import clients_bp
from routes.footer_settings import footer_settings_bp
from routes.homepage_block_titles import homepage_block_titles_bp
from routes.homepage_blocks import homepage_blocks_bp
from routes.homepage_categories import homepage_categories_bp
from routes.products import products_bp
from routes.characteristics import characteristics_bp
from routes.profile import profile_bp
from routes.public_homepage import public_homepage_bp
from routes.small_banners import small_banner_bp
from routes.system_brands import system_brands_bp
from routes.system_users import system_users_bp
from routes.upload import upload_bp
from routes.brands_statuses import bp as brands_statuses_bp
import os

from routes.upload_admin import upload_admin_bp
from routes.favorites import favorites_bp
from routes.cart import cart_bp
from routes.orders import orders_bp
from routes.order_statuses import order_statuses_bp
from routes.product_availability_statuses import product_availability_statuses_bp
from routes.public_product_availability_statuses import public_product_availability_statuses_bp
from models.systemuser import SystemUser


def create_app():
    app = Flask(__name__)
    app.config.from_object(Config)

    CORS(app)

    db.init_app(app)
    jwt.init_app(app)

    # üîπ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–æ–≤–∞—Ä—ã, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    app.register_blueprint(categories_bp, url_prefix="/categories")  # /categories/*
    app.register_blueprint(products_bp, url_prefix="/products")  # /products/*
    app.register_blueprint(characteristics_bp, url_prefix="/characteristics")  # /characteristics/*

    # üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –º–µ–¥–∏–∞
    app.register_blueprint(upload_bp, url_prefix='/upload')  # /upload/*

    # üîπ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (—Å—Ç–∞—Ç—É—Å—ã, –±—Ä–µ–Ω–¥—ã –∏ –ø—Ä.)
    app.register_blueprint(brands_statuses_bp, url_prefix='/meta')  # /meta/*

    # üîπ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ —Å–µ—Å—Å–∏–∏
    app.register_blueprint(auth_bp, url_prefix='/auth')  # /auth/login, /auth/me –∏ —Ç.–¥.

    # üîπ –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∞–¥–º–∏–Ω–∫–∞)
    app.register_blueprint(system_users_bp, url_prefix='/api')  # /api/system-users/*

    # üîπ –ö–ª–∏–µ–Ω—Ç—ã (—Ñ–∏–∑ –ª–∏—Ü–∞, –ò–ü, –¢–û–û)
    app.register_blueprint(clients_bp)  # /clients/*

    # üîπ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    app.register_blueprint(profile_bp)  # /api/profile
    
    # üîπ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
    app.register_blueprint(favorites_bp, url_prefix='/api')  # /api/favorites
    
    # üîπ –ö–æ—Ä–∑–∏–Ω–∞
    app.register_blueprint(cart_bp, url_prefix='/api')  # /api/cart
    
    # üîπ –ó–∞–∫–∞–∑—ã
    app.register_blueprint(orders_bp, url_prefix='/api')  # /api/orders
    
    # üîπ –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
    app.register_blueprint(order_statuses_bp, url_prefix='/api/admin')  # /api/admin/order-statuses
    
    # üîπ –°—Ç–∞—Ç—É—Å—ã –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞ (–∞–¥–º–∏–Ω–∫–∞)
    app.register_blueprint(product_availability_statuses_bp, url_prefix='/api/admin')  # /api/admin/product-availability-statuses
    
    # üîπ –°—Ç–∞—Ç—É—Å—ã –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞ (–ø—É–±–ª–∏—á–Ω—ã–µ)
    app.register_blueprint(public_product_availability_statuses_bp, url_prefix='/api')  # /api/product-availability-statuses/check/*

    # üîπ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –±–∞–Ω–Ω–µ—Ä—ã, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –ø—Ä.)
    app.register_blueprint(homepage_categories_bp, url_prefix='/api/admin')  # /api/admin/homepage-categories
    app.register_blueprint(banners_bp, url_prefix='/api/admin')  # /api/admin/banners/*
    app.register_blueprint(benefits_bp, url_prefix='/api/admin')  # /api/admin/benefits/*
    app.register_blueprint(upload_admin_bp, url_prefix='/api/admin')  # /api/admin/benefits/*
    app.register_blueprint(system_brands_bp, url_prefix='/api/admin')
    app.register_blueprint(footer_settings_bp, url_prefix='/api')
    app.register_blueprint(homepage_block_titles_bp, url_prefix='/api/admin')
    app.register_blueprint(homepage_blocks_bp, url_prefix='/api/admin')
    app.register_blueprint(small_banner_bp, url_prefix='/api/admin')

    app.register_blueprint(public_homepage_bp, url_prefix='/api')

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –±–µ—Ä—É—Ç—Å—è –∏–∑ Config
    app.config['UPLOAD_FOLDER'] = Config.UPLOAD_FOLDER
    app.config['ALLOWED_EXTENSIONS'] = Config.ALLOWED_EXTENSIONS
    app.config['MAX_CONTENT_LENGTH'] = Config.MAX_CONTENT_LENGTH

    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    print(f"Creating uploads folder: {app.config['UPLOAD_FOLDER']}")
    os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)

    with app.app_context():
        db.create_all()
        
        # –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        create_default_system_user()

    return app


def create_default_system_user():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email
        existing_user = SystemUser.query.filter_by(email='bocan.anton@mail.ru').first()
        
        if not existing_user:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            admin_user = SystemUser(
                full_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                email='bocan.anton@mail.ru',
                phone='+7 (777) 777-77-77',
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
                access_orders=True,
                access_catalog=True,
                access_clients=True,
                access_users=True,
                access_settings=True,
                access_dashboard=True,
                access_brands=True,
                access_statuses=True,
                access_pages=True
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
            admin_user.set_password('1')
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            db.session.add(admin_user)
            db.session.commit()
            
            print("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: bocan.anton@mail.ru")
        else:
            print("‚ÑπÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: bocan.anton@mail.ru")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        db.session.rollback()


app = create_app()


@app.route('/')
def index():
    return {"message": "POSPRO API Server is running", "status": "ok"}


@app.route('/api')
def api_index():
    return {"message": "POSPRO API", "version": "1.0", "status": "ok"}


@app.route('/uploads/products/<int:product_id>/<filename>')
def serve_product_file(product_id, filename):
    folder = os.path.join(app.config['UPLOAD_FOLDER'], 'products', str(product_id))
    full_path = os.path.join(folder, filename)
    
    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"File request: {filename}")
    print(f"Product folder: {folder}")
    print(f"Full path: {full_path}")
    print(f"File exists: {os.path.exists(full_path)}")
    print(f"UPLOAD_FOLDER: {app.config['UPLOAD_FOLDER']}")
    
    if not os.path.exists(full_path):
        print(f"File not found: {full_path}")
        return "File not found", 404
    
    return send_from_directory(folder, filename)


@app.route('/uploads/brands/<int:brand_id>/<filename>')
def serve_brand_image(brand_id, filename):
    return send_from_directory(
        os.path.join(app.config['UPLOAD_FOLDER'], 'brands', str(brand_id)),
        filename
    )


@app.route('/uploads/categories/<int:category_id>/<filename>')
def serve_category_image(category_id, filename):
    return send_from_directory(
        os.path.join(app.config['UPLOAD_FOLDER'], 'categories', str(category_id)),
        filename
    )


@app.route('/uploads/<path:filename>')
def serve_uploads(filename):
    upload_dir = os.path.join(app.root_path, 'uploads')
    return send_from_directory(upload_dir, filename)


@app.route('/uploads/banners/<int:banner_id>/<filename>')
def serve_banner_image(banner_id, filename):
    """–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–∞–Ω–Ω–µ—Ä–æ–≤"""
    upload_dir = os.path.join(app.config['UPLOAD_FOLDER'], 'banners', str(banner_id))
    return send_from_directory(upload_dir, filename)


@app.route('/uploads/banners/small_banners/<int:banner_id>/<filename>')
def serve_small_banner_image(banner_id, filename):
    """–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –º–∞–ª—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤"""
    upload_dir = os.path.join(app.config['UPLOAD_FOLDER'], 'banners', 'small_banners', str(banner_id))
    return send_from_directory(upload_dir, filename)


if __name__ == '__main__':
    app.run(host="0.0.0.0", port=5000, debug=False)
