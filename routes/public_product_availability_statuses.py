from flask import Blueprint, jsonify
from models.product_availability_status import ProductAvailabilityStatus

public_product_availability_statuses_bp = Blueprint('public_product_availability_statuses', __name__)


# üîπ –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É (–ø—É–±–ª–∏—á–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)
@public_product_availability_statuses_bp.route('/product-availability-statuses/check/<int:quantity>', methods=['GET'])
def get_status_for_quantity(quantity):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –ø–æ—Ä—è–¥–∫—É
        statuses = ProductAvailabilityStatus.query.filter_by(active=True).order_by(ProductAvailabilityStatus.order).all()
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∞—Ç—É—Å
        for status in statuses:
            if status.check_condition(quantity):
                return jsonify({
                    'status': status.to_dict(),
                    'formula': status.get_formula_display()
                })
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∞—Ç—É—Å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
        return jsonify({'status': None, 'formula': None})
        
    except Exception as e:
        return jsonify({'error': f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {str(e)}'}), 500

