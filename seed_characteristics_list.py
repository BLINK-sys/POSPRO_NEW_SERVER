#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã characteristics_list –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if not os.getenv("RENDER"):
    load_dotenv()

from app import create_app
from extensions import db
from models.characteristics_list import CharacteristicsList

def seed_characteristics_list():
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É characteristics_list –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    app = create_app()
    
    with app.app_context():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
            existing_count = CharacteristicsList.query.count()
            if existing_count > 0:
                print(f"‚ö†Ô∏è  –í —Ç–∞–±–ª–∏—Ü–µ characteristics_list —É–∂–µ –µ—Å—Ç—å {existing_count} –∑–∞–ø–∏—Å–µ–π")
                return True
            
            # –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            characteristics_data = [
                {"characteristic_key": "–í–ï–°", "unit_of_measurement": "–∫–≥"},
                {"characteristic_key": "–î–õ–ò–ù–ê", "unit_of_measurement": "—Å–º"},
                {"characteristic_key": "–®–ò–†–ò–ù–ê", "unit_of_measurement": "—Å–º"},
                {"characteristic_key": "–í–´–°–û–¢–ê", "unit_of_measurement": "—Å–º"},
                {"characteristic_key": "–û–ë–™–ï–ú", "unit_of_measurement": "–ª"},
                {"characteristic_key": "–ú–û–©–ù–û–°–¢–¨", "unit_of_measurement": "–í—Ç"},
                {"characteristic_key": "–ù–ê–ü–†–Ø–ñ–ï–ù–ò–ï", "unit_of_measurement": "–í"},
                {"characteristic_key": "–¢–û–ö", "unit_of_measurement": "–ê"},
                {"characteristic_key": "–ß–ê–°–¢–û–¢–ê", "unit_of_measurement": "–ì—Ü"},
                {"characteristic_key": "–¢–ï–ú–ü–ï–†–ê–¢–£–†–ê", "unit_of_measurement": "¬∞C"},
                {"characteristic_key": "–í–õ–ê–ñ–ù–û–°–¢–¨", "unit_of_measurement": "%"},
                {"characteristic_key": "–î–ê–í–õ–ï–ù–ò–ï", "unit_of_measurement": "–ü–∞"},
                {"characteristic_key": "–°–ö–û–†–û–°–¢–¨", "unit_of_measurement": "–º/—Å"},
                {"characteristic_key": "–í–†–ï–ú–Ø", "unit_of_measurement": "—Å–µ–∫"},
                {"characteristic_key": "–†–ê–°–°–¢–û–Ø–ù–ò–ï", "unit_of_measurement": "–º"},
                {"characteristic_key": "–ü–õ–û–©–ê–î–¨", "unit_of_measurement": "–º¬≤"},
                {"characteristic_key": "–¶–í–ï–¢", "unit_of_measurement": None},
                {"characteristic_key": "–ú–ê–¢–ï–†–ò–ê–õ", "unit_of_measurement": None},
                {"characteristic_key": "–ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨", "unit_of_measurement": None},
                {"characteristic_key": "–ú–û–î–ï–õ–¨", "unit_of_measurement": None},
            ]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            for data in characteristics_data:
                characteristic = CharacteristicsList(
                    characteristic_key=data["characteristic_key"],
                    unit_of_measurement=data["unit_of_measurement"]
                )
                db.session.add(characteristic)
            
            db.session.commit()
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(characteristics_data)} –∑–∞–ø–∏—Å–µ–π –≤ characteristics_list")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            all_characteristics = CharacteristicsList.query.all()
            print("\nüìã –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
            for char in all_characteristics:
                unit = f" ({char.unit_of_measurement})" if char.unit_of_measurement else ""
                print(f"  - {char.characteristic_key}{unit}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
            db.session.rollback()
            return False
    
    return True

if __name__ == "__main__":
    print("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã characteristics_list –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    success = seed_characteristics_list()
    
    if success:
        print("üéâ –ì–æ—Ç–æ–≤–æ!")
    else:
        print("üí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")
        sys.exit(1)
